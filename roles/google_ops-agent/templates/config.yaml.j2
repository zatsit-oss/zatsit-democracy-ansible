---
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# <== Enter custom agent configurations in this file.
# See https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/configuration
# for more details.

logging:
  receivers:
    puma:
      type: files
      include_paths:
        - "{{ puma_error_log }}"
    delayed_job:
      type: files
      include_paths:
        - "{{ shared_dir }}/log/delayed_job.log"
    app:
      type: files
      include_paths:
        - "{{ shared_dir }}/log/{{ env }}.log"
  processors:
    # puma:
    #   type: parse_multiline
    #   match_any:
    #     - type: language_exceptions
    #       language: ruby
    #   extract_structure:
    #     type: parse_regex
    #     field: message
    #     regex: "^$"
    #     time_key: time
    #     time_format: "%Y-%m-%dT%H:%M:%S.%L"
    app_parse:
      type: parse_regex
      field: message
      regex: "^., \[(?<time>[\d-]*T[\d:]*).\d* #\d*\] *(?<severity>[^ ]*) -- : \[?(?<_progname>[\w-]*)\]? *(?<message>.*)$"
      time_key: time
      time_format: "%Y-%m-%dT%H:%M:%S.%L"
    app_filter:
      type: exclude_logs
      match_any:
        - jsonPayload.message =~ "Delayed::Backend::ActiveRecord::Job Load"
    # app_clean_color:
    #   regex: "\x1B\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]"
  service:
    pipelines:
      default_pipeline:
        receivers:
          - syslog
      puma_pipeline:
        receivers:
          - puma
      delayed_job_pipeline:
        receivers:
          - delayed_job
      app_pipeline:
        receivers:
          - app
        processors:
          - app_parse
          - app_filter
